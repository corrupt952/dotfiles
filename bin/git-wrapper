#!/usr/bin/env ruby

require 'fileutils'
require 'shellwords'

GIT_CMD                  = '/usr/bin/env git'
GIT_CONFIG_DIR_PATH      = File.join(Dir.home, '.config', 'git')
GIT_WORKSPACE_GROUP_PATH = File.join(Dir.home, 'Workspace')

# Get user configurations
def env
  system 'echo "user: $(git config --get user.name)"'
  system 'echo "email: $(git config --get user.email)"'
end

# main method
if __FILE__ == $0
  case ARGV[0]

  # Show user.name and user.email
  when 'env'
    env

  # Change current branch
  when 'switch', 'sw'
    cmd = <<~CMD
      #{GIT_CMD} for-each-ref --format='%(refname:short)' refs/heads \
        | fzf --reverse --exit-0 --ansi \
        | xargs #{GIT_CMD} checkout
    CMD
    system cmd

  # Delete selected branches
  when 'delete', 'del'
    cmd = <<~CMD
      #{GIT_CMD} for-each-ref --format='%(refname:short)' refs/heads \
        | fzf --multi --reverse --exit-0 --ansi \
        | xargs #{GIT_CMD} branch -D
    CMD
    system cmd

  when 'push', 'ps'
    # NOTE: GIT_ALLOW_FORCE_PUSHがtrueでなければ
    #       forceオプションが含まれている場合にエラーとする
    if ENV['GIT_ALLOW_FORCE_PUSH'] != 'true'
      if ARGV.any? { |a| a.match?(/\s(--force|-f)/) }
        STDERR.puts "Don't use force push!!!"
        exit 1
      end
    end

    # TODO: 出来れば環境変数か何かで規則作りたい
    # NOTE: GIT_ALLOW_PUSH_MAIN_BRANCHがtrueでなければ、
    #       main,masterブランチへのプッシュをエラーとする
    if ENV['GIT_ALLOW_PUSH_MAIN_BRANCH'] != 'true'
      if ARGV.any? { |a| a.match?(/\A(main|master)\z/) }
        STDERR.puts "Don't push to protected branches!!!"
        exit 1
      end
    end

    system "#{GIT_CMD} " + ARGV.map(&Shellwords.method(:escape)).join(' ')
    exit $?.exitstatus

  else
    system "#{GIT_CMD} " + ARGV.map(&Shellwords.method(:escape)).join(' ')
    exit $?.exitstatus
  end
end
