###
# Logger
logger::print() {
  local level="$1"
  shift

  case "$level" in
    ERROR|WARN)
      echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')] [$level] $*" >&2
      ;;

    INFO|DEBUG)
      echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')] [$level] $*"
      ;;
  esac
}
logger::error() {
  logger::print "ERROR" $*
}
logger::warn() {
  logger::print "WARN" $*
}
logger::info() {
  logger::print "INFO" $*
}
logger:debug() {
  logger::print "DEBUG" $*
}

###
# OS
os::is_darwin() {
  [ "$(uname -s)" = "Darwin" ]
}
os::is_ubuntu() {
  [ "$(lsb_release -is)" = "Ubuntu" ]
}

###
# Command
command::exist() {
  if [ $# -eq 1 ]; then
    if `which $1 > /dev/null 2>&1`; then
      true
      return
    fi
  else
    logger::error 'too many arguments or less'
  fi
  false
}

###
# zsh
zsh::clean_zcompdump() {
  rm -f ${HOME}/.zcompdump*
  rm -f ${HOME}/.antigen/.zcompdump*
}

###
# for Darwin functions
if os::is_darwin; then
  function clip() {
    cat $1 | pbcopy
  }

  function revstr() {
    echo $1 | rev | pbcopy
  }
fi
